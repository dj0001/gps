<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#5ac1f2">
<link rel="manifest" href="gps.manifest">
<link rel="icon" type="image/png" sizes="144x144" href="icon.png">
<style>
body{background-color:black;}
div
{
/* transform:scaleX(-1); */
transform:scaleY(-1);
color:white;
font-weight:bold;
font-size:40px;
}
</style>
</head>

<body>
<a download='mytrack.gpx'><div id="txt" onclick='wakelock = new Wakelock();wakelock.request(); dst=0; if(top.location.search.slice(1)>1) audio.play()' oncontextmenu='document.querySelector("a").href="data:application/gpx+xml,"+gpx+"</trkseg></trk></gpx>"'>GPS</div></a>

<script>
function geo2gk(lp, bp)
{
/* Copyright (c) 2006, HELMUT H. HEIMEIER
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:
   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.*/

/* Die Funktion wandelt geographische Koordinaten in GK Koordinaten
   um. Geographische Länge lp und Breite bp müssen im Potsdam Datum
   gegeben sein. Berechnet werden Rechtswert rw und Hochwert hw.*/

// Geographische Länge lp und Breite bp im Potsdam Datum
   if (lp == "" || bp == "")
   {
   rw = "";
   hw = "";
   return;
   }
   lp = parseFloat(lp);
   bp = parseFloat(bp);

// Grenzen des Gauss-Krüger-Systems für Deutschland 46° N < bp < 55° N,
//                                                   5° E < lp < 16° E
   if (bp < 46 || bp > 56 || lp < 5 || lp > 16)
   {
   alert("Werte außerhalb des für Deutschland definierten\n"+
   " Gauss-Krüger-Systems 5° E < LP < 16° E, 46° N < BP < 55° N");
   rw = "";
   hw = "";
   return;
   }

// Potsdam Datum
// Große Halbachse a und Abplattung f
   a = 6377397.155;
   f = 3.34277321e-3;
   pi = Math.PI;

// Polkrümmungshalbmesser c
   c = a/(1-f);

// Quadrat der zweiten numerischen Exzentrizität
   ex2 = (2*f-f*f)/((1-f)*(1-f));
   ex4 = ex2*ex2;
   ex6 = ex4*ex2;
   ex8 = ex4*ex4;

// Koeffizienten zur Berechnung der Meridianbogenlänge
   e0 = c*(pi/180)*(1 - 3*ex2/4 + 45*ex4/64 - 175*ex6/256 + 11025*ex8/16384);
   e2 = c*(  - 3*ex2/8 + 15*ex4/32  - 525*ex6/1024 +  2205*ex8/4096);
   e4 = c*(15*ex4/256 - 105*ex6/1024 +  2205*ex8/16384);
   e6 = c*( -  35*ex6/3072 +   315*ex8/12288);

// Breite in Radianten
   br = bp * pi/180;

   tan1 = Math.tan(br);
   tan2 = tan1*tan1;
   tan4 = tan2*tan2;

   cos1 = Math.cos(br);
   cos2 = cos1*cos1;
   cos4 = cos2*cos2;
   cos3 = cos2*cos1;
   cos5 = cos4*cos1;

   etasq = ex2*cos2;

// Querkrümmungshalbmesser nd
   nd = c/Math.sqrt(1 + etasq);

// Meridianbogenlänge g aus gegebener geographischer Breite bp
   g = e0*bp + e2*Math.sin(2*br) + e4*Math.sin(4*br) + e6*Math.sin(6*br);

// Längendifferenz dl zum Bezugsmeridian lh
   kz = parseInt((lp+1.5)/3);
   lh = kz*3;
   dl = (lp - lh)*pi/180;
   dl2 = dl*dl;
   dl4 = dl2*dl2;
   dl3 = dl2*dl;
   dl5 = dl4*dl;

// Hochwert hw und Rechtswert rw als Funktion von geographischer Breite und Länge
   hw = (g + nd*cos2*tan1*dl2/2 + nd*cos4*tan1*(5-tan2+9*etasq)*dl4/24);
   rw =      (nd*cos1*dl         + nd*cos3*(1-tan2+etasq)*dl3/6 +
              nd*cos5*(5-18*tan2+tan4)*dl5/120 + kz*1e6 + 500000);

   nk = hw - parseInt(hw);
   if (nk < 0.5) hw = parseInt(hw)
   else hw = parseInt(hw) + 1;

   nk = rw - parseInt(rw);
   if (nk < 0.5) rw = parseInt(rw)
   else rw = parseInt(rw+1);
   return rw+","+hw  //return {rw, hw};  //return;
}
  
  function Wakelock() { //Android
  var video = document.createElement('video');
  video.addEventListener('ended', function() {
    video.play();
  });
  this.request = function() {
    if (video.paused) {
      video.src = "data:video/webm;base64,GkXfo0AgQoaBAUL3gQFC8oEEQvOBCEKCQAR3ZWJtQoeBAkKFgQIYU4BnQI0VSalmQCgq17FAAw9CQE2AQAZ3aGFtbXlXQUAGd2hhbW15RIlACECPQAAAAAAAFlSua0AxrkAu14EBY8WBAZyBACK1nEADdW5khkAFVl9WUDglhohAA1ZQOIOBAeBABrCBCLqBCB9DtnVAIueBAKNAHIEAAIAwAQCdASoIAAgAAUAmJaQAA3AA/vz0AAA="
      video.play();
    }
  };
  this.release = function() {
    video.pause();
    video.src = '';
  };
}
    var accur = false;
    if (top.location.search.slice(1)) accur = true // == 1 //?1 HighAccuracy
    if (top.location.search.slice(1) == 1) document.getElementById("txt").style.transform="none" //?1 none scale
if(isNaN(top.location.search.slice(1))) document.getElementById("txt").style.color=decodeURIComponent(top.location.search.slice(1))  // %23
else if(top.location.search.slice(1) > 1) {var audio=new Audio(); audio.src="https://upload.wikimedia.org/wikipedia/commons/0/05/Beep-09.ogg"} //edit here  //?120
var time0=new Date(), dst=0  //0
var gpx = '<?xml version="1.0" encoding="UTF-8"?>%0D%0A<gpx xmlns="http://www.topografix.com/GPX/1/1" creator="dj" version="1.1"><trk><name>test</name><trkseg>%0D%0A', trkpt0, speed0=0
//
    navigator.geolocation.watchPosition(showPosition, function(err) {
      alert(err.message)
    }, {
      enableHighAccuracy: accur,
      timeout: 50000,
      maximumAge: 0
    }); //getCurrent
function showPosition(position) {
  var time=new Date(); dst+=position.coords.speed*(time-time0)/1000/1000; time0=time
document.getElementById("txt").innerHTML = 
 '<span style="font-size:20px;">'+position.coords.altitude+' m</span>'
+ '<br>'+Math.round(position.coords.speed * 3.6)  // km/h
+ '<br><span style="font-size:20px;">'+dst.toFixed(1)+' km</span>'
+ '<br><span style="font-size:20px;">'+position.coords.latitude+' N</span>'
+ '<br><span style="font-size:20px;">'+position.coords.longitude+' S</span>'
+ '<br><a href="https://www.deine-berge.de/Rechner/Koordinaten/Dezimal/'+position.coords.latitude+','+position.coords.longitude+'" target="gk" style="font-size:20px;">Gauß-Krüger</a>'
+ '<br><a href="https://tools.retorte.ch/map/?wgs84='+position.coords.latitude+','+position.coords.longitude+'" target="gk" style="font-size:20px;">Gauß-Krüger (Ch)</a>'
+ '<br><span style="font-size:20px;">'+geo2gk(position.coords.longitude,position.coords.latitude)+' R,H</span>'
var trkpt = '<trkpt lat="' + position.coords.latitude + '" lon="' + position.coords.longitude + '">'
if (trkpt != trkpt0) {gpx += trkpt + '</trkpt>%0D%0A'; trkpt0=trkpt}
if (top.location.search.slice(1)>1 && position.coords.speed*3.6>=top.location.search.slice(1) && speed0*3.6<top.location.search.slice(1)) audio.play(); speed0=position.coords.speed
}
if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('sw.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }).catch(function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);  //origin ('null') is not supported  //Failed to register a ServiceWorker  //successful
    });
  });
}
</script>

</body>
</html>
